<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

	<context:property-placeholder location="file:${statealerts.config.location}/*.properties, classpath*:*.properties"/>

	<!-- The controllers are autodetected POJOs labeled with the @Controller annotation. -->
	<context:component-scan base-package="bg.statealerts.controllers" />

	<!-- Turns on support for mapping requests to Spring MVC @Controller methods Also registers default Formatters and Validators 
		for use across all @Controllers -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="bg.statealerts.util.ScalaJsonHttpMessageConverter"/>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources -->
	<mvc:resources location="/, classpath:/META-INF/web-resources/" mapping="/resources/**" />

	<!-- Allows for mapping the DispatcherServlet to "/" by forwarding static resource requests to the container's default Servlet -->
	<mvc:default-servlet-handler />

	<!-- Register "global" interceptor beans to apply to all registered HandlerMappings -->
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.theme.ThemeChangeInterceptor" />
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" p:paramName="lang" />
	</mvc:interceptors>

	<!-- mapping images, js and styles with separate mappings. Otherwise it conflicts with ResourceController mapping. -->
    <mvc:resources mapping="/static/img/**" location="/img/" cache-period="0" />
    <mvc:resources mapping="/static/scripts/**" location="/scripts/" cache-period="0" />
    <mvc:resources mapping="/static/styles/**" location="/styles/" cache-period="0" />
    <mvc:resources mapping="/static/playerSkins/**" location="/playerSkins/" cache-period="0" />


	<!-- Selects a static view for rendering without the need for an explicit controller -->
	<mvc:view-controller path="/" view-name="index" />
	<mvc:view-controller path="/exceptions/uncaughtException" />
	<mvc:view-controller path="/exceptions/resourceNotFound" />
	<mvc:view-controller path="/exceptions/dataAccessFailure" />

 	<bean class="org.springframework.social.connect.web.ProviderSignInController">
        <property name="signUpUrl" value="/socialSignUp"/>
    </bean>
    
	<!-- Resolves localized messages*.properties and application.properties files in the application to allow for internationalization. 
		The messages*.properties files translate Roo generated messages which are part of the admin interface, the application.properties 
		resource bundle localizes all application specific messages such as entity names and menu items. -->
	<bean class="org.springframework.context.support.ReloadableResourceBundleMessageSource" id="messageSource"
		p:basenames="WEB-INF/i18n/messages,WEB-INF/i18n/application" p:fallbackToSystemLocale="false" />

	<!-- Store preferred language configuration in a cookie -->
	<bean class="org.springframework.web.servlet.i18n.CookieLocaleResolver" id="localeResolver" p:cookieName="locale" />

	<!-- Resolves localized <theme_name>.properties files in the classpath to allow for theme support -->
	<bean class="org.springframework.ui.context.support.ResourceBundleThemeSource" id="themeSource" />

	<!-- Store preferred theme configuration in a cookie -->
	<bean class="org.springframework.web.servlet.theme.CookieThemeResolver" id="themeResolver" p:cookieName="theme"
		p:defaultThemeName="standard" />

	
	<!-- Enable this for integration of file upload functionality -->
	<bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver" />
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
</beans>
